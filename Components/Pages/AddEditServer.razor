@page "/server/{id:int?}"

@inject NavigationManager NavigationManager

<h3>AddEditServer</h3>

@if (Id.HasValue)
{
    <h3>Edit Server</h3>

    @if (server != null)
    {
        <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">

            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            @if (server.ServerId > 0)
            {
                <InputNumber @bind-Value="server.ServerId" hidden> </InputNumber>
            }
            <FieldComponent Label="Name">

                <Control>
                    <InputText @bind-Value="server.Name" class="form-control"></InputText>
                </Control>
                <ValidationControl>
                    <ValidationMessage For="()=>server.Name"></ValidationMessage>
                </ValidationControl>

            </FieldComponent>


            <div class="row mb-3">
                <div class="col-2">
                    <label class="col-form-label">City</label>
                </div>
                <div class="col-6">
                    <InputText @bind-Value="server.City" class="form-control"></InputText>
                </div>
            </div><div class="row  mb-3">
                <div class="col-2">
                    <label class="col-form-label">Online</label>
                </div>
                <div class="col-6">
                    <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
                </div>
            </div>

            <br />

            <button class="btn btn-primary" type="submit">Update</button>
            <a href="/servers" class="btn btn-primary ">Close</a>

        </EditForm>
    }

}
else
{
    <h3>Add Server</h3>


    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="()=>server.Name"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </div>
        </div><div class="row  mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>

        <br />

        <button class="btn btn-primary" type="submit">Save</button>
        <a href="/servers" class="btn btn-primary ">Close</a>

    </EditForm>
}
@code {

    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    [SupplyParameterFromQuery]
    public string? City { get; set; }


    protected override void OnParametersSet()
    {
        if (this.Id.HasValue)
        {
            server ??= ServerRepository.GetServerById(this.Id.Value);
        }
        else
        {
            server ??= new Server() { IsOnline = false };
        }

        if (server != null && !string.IsNullOrEmpty(this.City))
        {
            server.City = this.City;
        }
    }

    private void Submit()
    {
        if (server != null)
        {
            if (this.Id.HasValue)
                ServerRepository.UpdateServer(server.ServerId, server);
            else
                ServerRepository.AddServer(server);
        }
        NavigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
    }

}
