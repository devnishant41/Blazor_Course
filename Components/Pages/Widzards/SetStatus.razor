@page "/serverstatus"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>Server Status</h3>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}



<FieldComponent Label="Server Status">
    <Control>
        <input type="checkbox" @bind-value="isOnline" class="form-check-input " />
    </Control>

</FieldComponent>

<br />

<button type="button" class="btn btn-primary" @onclick="Save">Next</button>



@code {

    private string? errorMessage;

    private bool isOnline;

    [SupplyParameterFromQuery]
    public string? CityName { get; set; }

    [SupplyParameterFromQuery]
    public string? ServerName { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (string.IsNullOrWhiteSpace(ServerName))
            {
                this.errorMessage = "Server Name is Not Provided";
                StateHasChanged();
            }
            else if (string.IsNullOrEmpty(CityName))
            {
                this.errorMessage = "City Name wasn't provided";
                StateHasChanged();
            }

            StateHasChanged();
        }
    }

    private void Save()
    {
        if (string.IsNullOrWhiteSpace(ServerName))
        {
            this.errorMessage = "Server Name is Not Provided";
            return;
        }
        else if (string.IsNullOrEmpty(CityName))
        {
            this.errorMessage = "City Name wasn't provided";
            return;
        }


        var server = new Server
            {
                Name = this.ServerName,
                City = this.CityName,
                IsOnline = this.isOnline
            };


        ServerRepository.AddServer(server);
        NavigationManager.NavigateTo($"/servers/back_from/{CityName}");
    }
}
