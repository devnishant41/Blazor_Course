@page "/servername"

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using App_01_ServerManagement.StateStore
@inject ContainerStorage containerStorage

<h3>SetServerName</h3>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}
@if (server is not null)
{

    <FieldComponent Label="Name">
        <Control>
            <input type="text" @bind-value="server.Name" class="form-control " />
        </Control>

    </FieldComponent>

}
<br />

<button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>


@code {
    private Server? server;

    private string? errorMessage;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)

        {
            server = new Server();
            StateHasChanged();
        }
    }

    private void GoNext()
    {
        if (server is not null)
        {
            if (string.IsNullOrWhiteSpace(server.Name))
            {
                this.errorMessage = "Server name is Required ";
            }
            else
            {
                containerStorage.SetServer(server);
                NavigationManager.NavigateTo($"/cityname");
            }
        }
    }
}


@* SESSION STORAGE *@

@*

@page "/servername"

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using App_01_ServerManagement.StateStore
@inject SessionStorage sessionStorage

<h3>SetServerName</h3>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}
@if (server is not null)
{

    <FieldComponent Label="Name">
        <Control>
            <input type="text" @bind-value="server.Name" class="form-control " />
        </Control>

    </FieldComponent>

}
<br />

<button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>


@code {
    private Server? server;

    private string? errorMessage;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)

        {
            server = new Server();
            StateHasChanged();
        }
    }

    private async Task GoNext()
    {
        if (server is not null)
        {
            if (string.IsNullOrWhiteSpace(server.Name))
            {
                this.errorMessage = "Server name is Required ";
            }
            else
            {
                await sessionStorage.SetServerAsync(server);
                NavigationManager.NavigateTo($"/cityname");
            }
        }
    }
}
 *@