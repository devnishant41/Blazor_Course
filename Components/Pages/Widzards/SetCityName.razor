@page "/cityname"
@using App_01_ServerManagement.StateStore
@inject ContainerStorage containerStorage
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>City Name</h3>

<br />

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}
@if (server is not null)
{


    <FieldComponent Label="City Name">
        <Control>
            <input type="text" @bind-value="server.City" class="form-control">
        </Control>
    </FieldComponent>

}
<br />

<button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>


@code {
    private string? errorMessage;
    private Server? server;


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            this.server = this.containerStorage.GetServer();
            StateHasChanged();
        }
    }

    private void GoNext()
    {
        if (server is not null)
        {
            if (string.IsNullOrWhiteSpace(server.City))
            {
                this.errorMessage = "City Name is Required";
            }
            else
            {
                containerStorage.SetServer(server);
                NavigationManager.NavigateTo($"/serverstatus");
            }
        }
    }
}
@* @page "/cityname"
@using App_01_ServerManagement.StateStore
@inject SessionStorage sessionStorage
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>City Name</h3>

<br />

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}
@if (server is not null)
{


    <FieldComponent Label="City Name">
        <Control>
            <input type="text" @bind-value="server.City" class="form-control">
        </Control>
    </FieldComponent>

}
<br />

<button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>


@code {
    private string? errorMessage;
    private Server? server;


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.server = await this.sessionStorage.GetServerAsync();
            StateHasChanged();
        }
    }

    private async Task GoNext()
    {
        if (server is not null)
        {
            if (string.IsNullOrWhiteSpace(server.City))
            {
                this.errorMessage = "City Name is Required";
            }
            else
            {
                await sessionStorage.SetServerAsync(server);
                NavigationManager.NavigateTo($"/serverstatus");
            }
        }
    }
}
 *@