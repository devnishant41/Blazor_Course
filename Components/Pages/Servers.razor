@page "/servers"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
<h3>Servers</h3>

<CityListComponent @ref="cityListComponent" SelectCityCallback="HandleCitySelection"> </CityListComponent>

<br />

<SearchBarComponent @ref="searchBarComponent" SearchServerCallback="HandleSearchServer" style="width:20px"></SearchBarComponent>

<CascadingValue Name="SelectedCity" Value="@Selectedcity">
    @* <ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent> *@

    <ServerListComponent @rendermode="InteractiveServer" CityName="@this.Selectedcity" SearchFilter="@searchFilter" AnotherParam="anotherParam"></ServerListComponent>

</CascadingValue>

<div class="mt-4">
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</div>

<p>
    <button class="btn btn-primary" @onclick="@(()=>
{
Random random = new Random();
anotherParam=random.Next(0,100);
})">
        Change Param
    </button>
</p>

@code {
    private int anotherParam;
    // private string serverFilter = string.Empty;
    private string Selectedcity = "London";

    private string searchFilter = "";

    private CityListComponent? cityListComponent;

    private SearchBarComponent? searchBarComponent;

    // private void HandleServerFilterChanged(ChangeEventArgs args)
    // {
    //     serverFilter = args.Value?.ToString() ?? string.Empty;
    // }

    private void HandleSearch()
    {
        // this.servers = ServerRepository.SearchServers(serverFilter);
        // this.selectedCity = string.Empty;
    }

    private void HandleCitySelection(string cityName)
    {
        Selectedcity = cityName;
        this.searchFilter = string.Empty;
        searchBarComponent?.ClearFilter();
    }

    private void HandleSearchServer(string searchFilter)
    {
        this.searchFilter = searchFilter;
        cityListComponent?.ClearSelection();
    }
}
