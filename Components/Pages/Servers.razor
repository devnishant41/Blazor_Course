@page "/servers"
@page "/servers/back_from/{cityName}"
@rendermode InteractiveServer
@inject IServersEFCoreRepository ServerEFCoreRepository
@using App_01_ServerManagement.StateStore
@inject NavigationManager NavigationManager
@inject LondonOnlineServers londonOnlineStores


<h3>Servers</h3>

<CityListComponent @ref="cityListComponent" SelectCityCallback="HandleCitySelection" selectedCity="@this.Selectedcity"> </CityListComponent>

<br />

<SearchBarComponent @ref="searchBarComponent" SearchServerCallback="HandleSearchServer" style="width:20px"></SearchBarComponent>

<CascadingValue Name="SelectedCity" Value="@Selectedcity">
    @* <ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent> *@

    <ServerListComponent @rendermode="InteractiveServer" CityName="@this.Selectedcity" SearchFilter="@searchFilter"></ServerListComponent>

</CascadingValue>

<div class="mt-4">
    <a href="/servername" class="btn btn-primary">Add Server</a>
</div>


@code {
    // private string serverFilter = string.Empty;

    [Parameter]
    public string? CityName { get; set; }

    private string Selectedcity = "London";

    private string searchFilter = "";

    private CityListComponent? cityListComponent;

    private SearchBarComponent? searchBarComponent;

    // private void HandleServerFilterChanged(ChangeEventArgs args)
    // {
    //     serverFilter = args.Value?.ToString() ?? string.Empty;
    // }

    private void HandleSearch()
    {
        // this.servers = ServerEFCoreRepository.SearchServers(serverFilter);
        // this.selectedCity = string.Empty;
    }

    private void HandleCitySelection(string cityName)
    {
        Selectedcity = cityName;
        this.searchFilter = string.Empty;
        searchBarComponent?.ClearFilter();
    }

    private void HandleSearchServer(string searchFilter)
    {
        this.searchFilter = searchFilter;
        cityListComponent?.ClearSelection();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(CityName))
            {
                Selectedcity = CityName;
                StateHasChanged();
            }

            var serversLondon = ServerEFCoreRepository.GetServerByCity("London");
            if (serversLondon is not null)
            {
                londonOnlineStores.SetNumberOfServersOnline(serversLondon.Count(x => x.IsOnline));
            }
        }
    }
}
