@page "/quickgrid"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<h3>QuickGridDemo</h3>

@if (servers != null)
{
    <QuickGrid Items="servers.AsQueryable()" Pagination="paginationState">

        <PropertyColumn Property="s=>s.Name"></PropertyColumn>
        <PropertyColumn Property="s=>s.City" Sortable="true"></PropertyColumn>
        <TemplateColumn Title="Status" Sortable="true" SortBy="GridSort<Server>.ByAscending(s=>s.IsOnline)">
            @if (context.IsOnline)
            {
                <div style="color:@((context.IsOnline ? "green" : "red"))">
                    Online
                </div>

            }
            else
            {
                <div>
                    Offline
                </div>
            }
        </TemplateColumn>
        <TemplateColumn Title="People Online">

            @if (context.IsOnline)
            {
                Random random = new Random();
                int randomNumber = random.Next(0, 500);

                <text>@randomNumber</text>
            }
            else
            {
                <text>N/A</text>
            }
        </TemplateColumn>

        <TemplateColumn>
            @if (context.IsOnline)
            {
                <span>
                    <button type="button"
                            class="btn btn-outline-danger"
                            @onclick="@(()=>{context.IsOnline = false;})">
                        Turn Off
                    </button>
                </span>
            }
            else
            {
                <span>
                    <button type="button" class="btn btn-outline-success"
                            @onclick="@(()=>{context.IsOnline = true;})">
                        Turn On
                    </button>
                </span>

            }
        </TemplateColumn>

        <TemplateColumn>
            <ChildContent Context="server">
                <EditForm Model="server" FormName="@($"form-Server-{server.ServerId}")" OnValidSubmit="@(()=>{DeleteServer(server.ServerId);})">
                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                </EditForm>
            </ChildContent>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="paginationState"></Paginator>
               }
               @code {
               private List<Server>? servers = ServerRepository.GetServers();

        private PaginationState paginationState = new PaginationState { ItemsPerPage = 5 };
        private void DeleteServer(int ServerId)
        {
            if (ServerId > 0)
            {

                ServerRepository.DeleteServer(ServerId);
            }
            NavigationManager.NavigateTo("/quickgrid", true);
        }
    }
