@implements IDisposable

@if (cities != null && cities.Count > 0)
{
    <div class="container-fluid text-center mb-5">
        <div class="row w-80">
            @foreach (var city in cities)
            {
                <CityComponent city="@city" selectedCity="@selectedCity" SelectCityCallback="HandleCitySelection"></CityComponent>
            }
        </div>
    </div>
}

@code {

    private List<string> cities = CityRepository.GetCities();
    private string selectedCity = "London";
    [Parameter]
    public EventCallback<string> SelectCityCallback { get; set; }

    public void ClearSelection()
    {
        this.selectedCity = string.Empty;
    }

    private void SelectCity(string city)
    {
        this.selectedCity = city;
        // this.servers = ServerRepository.GetServerByCity(this.selectedCity);
    }

    public void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        SelectCityCallback.InvokeAsync(cityName);
    }

    // rendering

    protected override bool ShouldRender()
    {
        var guid = Guid.NewGuid();
        Console.WriteLine($"City Component {nameof(ShouldRender)}  {guid}");
        return base.ShouldRender();
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        var guid = Guid.NewGuid();
        Console.WriteLine($"CityListComponent {nameof(SetParametersAsync)}  {guid}");
        return base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var guid = Guid.NewGuid();
        Console.WriteLine($"CityListComponent {nameof(OnInitialized)}  {guid}");
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        var guid = Guid.NewGuid();
        Console.WriteLine($"CityListComponent {nameof(OnParametersSet)}  {guid}");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        var guid = Guid.NewGuid();
        Console.WriteLine($"CityListComponent {nameof(OnAfterRender)}  {guid}");
    }

    public void Dispose()
    {
        var guid = Guid.NewGuid();
        Console.WriteLine($"CityListComponent {nameof(Dispose)}  {guid}");
    }
}
