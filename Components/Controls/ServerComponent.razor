@inject NavigationManager NavigationManager

@if (Server != null)
{
    <tr style="background-color: @GetBackGroundColor()">
        <td>
            @Server.Name
        </td>
        <td>
            @Server.City
        </td>
        <td style="color:@(Server.IsOnline?"red":"blue")">
            @(Server.IsOnline ? "Online" : "Offline")
        </td>
        <td>
            @if (Server.IsOnline)
            {
                <span>
                    <button type="button"
                            class="btn btn-outline-danger"
                            @onclick="@(()=>{Server.IsOnline = false;})">
                        Turn Off
                    </button>
                </span>
            }
            else
            {
                <span>
                    <button type="button" class="btn btn-outline-success"
                            @onclick="@(()=>{Server.IsOnline = true;})">
                        Turn On
                    </button>
                </span>

            }
        </td>

        @* display button *@
        <td>
            @if (Server.IsOnline)
            {
                Random random = new Random();
                int randomNumber = random.Next(0, 500);

                <text>@randomNumber</text>
            }
            else
            {
                <text>N/A</text>
            }
            <a href="/Servers/@Server.ServerId" class="btn btn-link">Edit</a>
        </td>

        @* <button type="button" class="btn btn-link" @onclick="@(()=>{this.editingServer = !this.editingServer ;})">Edit</button> *@

        <td>
            <EditForm Model="Server" FormName="@($"form-Server-{Server.ServerId}")" OnValidSubmit="@(()=>{DeleteServer(Server.ServerId);})">
                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
            </EditForm>
        </td>

        @if (editingServer)
        {
            <App_01_ServerManagement.Components.Pages.EditServer Id="this.Server.ServerId"></App_01_ServerManagement.Components.Pages.EditServer>
        }
        </tr>

    @SelectedCity
}
@code {
    private bool editingServer = false;

    [Parameter]
    public Server? Server { get; set; }

    [CascadingParameter(Name = "SelectedCity")]
    public string? SelectedCity { get; set; }

    private void DeleteServer(int ServerId)
    {
        if (ServerId > 0)
        {

            ServerRepository.DeleteServer(ServerId);
        }
        NavigationManager.NavigateTo("/Servers", true);
    }

    private string GetBackGroundColor()
    {
        if (SelectedCity != null)
        {
            switch (this.SelectedCity)
            {
                case "Chicago": return "powderblue";
                default:
                    return "white";

            }
        }
        else
        {
            return "white";
        }
    }

    }
